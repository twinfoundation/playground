{
	"app": {
		"name": "Playground"
	},
	"navigation": {
		"login": "Login",
		"logout": "Logout",
		"dashboard": "Dashboard",
		"telemetry": "Telemetry",
		"logging": "Logging",
		"blobs": "Blobs",
		"documents": "Documents",
		"attestations": "Attestations",
		"auditable-item-graphs": "Auditable Item Graphs",
		"auditable-item-streams": "Auditable Item Streams",
		"nft": "NFT",
		"verifiable-storage": "Verifiable Storage",
		"immutable-proof": "Immutable Proof",
		"data-processing": "Data Processing",
		"rights-management": "Rights Management"
	},
	"components": {
		"blobViewer": {
			"noBlobData": "No blob data available",
			"unsupportedFormatInline": "This content format cannot be displayed inline",
			"invalidTextContent": "Unable to decode text content",
			"pdfContent": "PDF content"
		},
		"attestationView": {
			"title": "Attestation",
			"id": "Id",
			"exploreNft": "Explore NFT",
			"attestationQr": "Attestation QR Code",
			"verified": "Verified",
			"created": "Created",
			"ownerIdentity": "Owner Identity",
			"transferred": "Transferred",
			"holderIdentity": "Holder Identity",
			"attestationObject": "Attestation Object",
			"proof": "Proof"
		},
		"nftView": {
			"title": "Nft",
			"id": "Id",
			"exploreNft": "Explore NFT",
			"nftQr": "Nft QR Code",
			"verified": "Verified",
			"created": "Created",
			"issuer": "Issuer",
			"tag": "Tag",
			"owner": "Owner",
			"name": "Name",
			"description": "Description",
			"uri": "Uri",
			"immutableMetadata": "Immutable Metadata",
			"metadata": "Metadata",
			"transferred": "Transferred",
			"holderIdentity": "Holder Identity",
			"nftObject": "Nft Object",
			"proof": "Proof"
		},
		"loggingView": {
			"title": "Logging"
		},
		"auditableItemStreamView": {
			"title": "Auditable Item Stream",
			"id": "Id",
			"auditableItemStreamQr": "Auditable Item Stream QR Code",
			"viewProof": "View Proof",
			"proofId": "Proof Id",
			"entries": "Entries",
			"entryId": "Entry Id"
		},
		"immutableProofView": {
			"title": "Immutable Proof",
			"id": "Id",
			"proof": "Proof",
			"receipt": "Receipt",
			"verified": "Verified",
			"failure": "Failure message",
			"explorer": "Explorer"
		},
		"immutableProofReceipt": {
			"title": "Verifiable Receipt",
			"type": "Type",
			"id": "Id",
			"transactionId": "Transaction Id",
			"network": "Network",
			"epoch": "Epoch",
			"digest": "Digest",
			"entityStorageId": "Entity Storage Id",
			"explore": "Explore"
		},
		"rightsManagementView": {
			"title": "Rights Management Policy",
			"id": "Id",
			"policy": "Policy",
			"receipt": "Receipt",
			"verified": "Verified",
			"failure": "Failure message",
			"explorer": "Explorer"
		}
	},
	"common": {
		"labels": {
			"description": "Description",
			"dateCreated": "Date Created",
			"dateModified": "Date Modified",
			"actions": "Actions",
			"search": "Search",
			"clear": "Clear",
			"dateDeleted": "Date Deleted"
		}
	},
	"pages": {
		"login": {
			"title": "Login",
			"email": "E-mail",
			"password": "Password",
			"signIn": "Sign in",
			"signingIn": "Signing in",
			"noAccount": "Don't have an account yet?",
			"signUp": "Sign up"
		},
		"identityProfile": {
			"title": "Profile",
			"qr": "Public Profile View",
			"identity": "Identity",
			"explore": "Explore",
			"firstName": "First Name",
			"lastName": "Last Name",
			"displayName": "Display Name",
			"displayNameDescription": "This will be the name that is displayed publicly when viewing your identity"
		},
		"identityPublic": {
			"title": "Identity Public Profile",
			"qr": "Public Profile View",
			"identity": "Identity",
			"schema": "Schema",
			"displayName": "Name",
			"explore": "Explore",
			"didDocument": "DID Document"
		},
		"attestation": {
			"title": "Attestations",
			"loading": "Loading attestations...",
			"noItems": "No attestations found",
			"createItem": "Create Attestation",
			"deleteTitle": "Delete Attestation",
			"currentHolder": "Current Owner",
			"deleteMessage": "Are you sure you want to delete this attestation?",
			"destroyTitle": "Destroy Attestation",
			"destroyMessage": "Are you sure you want to destroy this attestation? This action cannot be undone."
		},
		"attestationTransfer": {
			"title": "Transfer Attestation",
			"currentOwner": "Current Owner",
			"recipientIdentity": "New Recipient Identity",
			"recipientAddress": "New Recipient Address",
			"transfer": "Transfer",
			"transferSuccess": "Attestation transferred successfully",
			"progress": "Transferring attestation..."
		},
		"attestationProperties": {
			"title": "Create Attestation",
			"blob": "Blob",
			"selectBlob": "Select blob",
			"assertionMethod": "Assertion Method",
			"selectAssertionMethod": "Select assertion method",
			"attestationId": "Attestation Id",
			"attestationQr": "Attestation QR Code",
			"attestationOf": "Attestation of {blob}",
			"signature": "Signature",
			"action": "Attest",
			"actionSuccess": "Attestation was successful",
			"progress": "Attesting the document...",
			"resultTitle": "Attestation Result"
		},
		"nft": {
			"title": "Nfts",
			"loading": "Loading nfts...",
			"noItems": "No nfts found",
			"mintItem": "Mint Nft",
			"deleteTitle": "Delete Nft",
			"deleteMessage": "Are you sure you want to delete this nft?"
		},
		"nftProperties": {
			"title": "Mint Nft",
			"transferTitle": "Transfer Nft",
			"issuer": "Issuer",
			"tag": "Tag",
			"owner": "Owner",
			"name": "Name",
			"description": "Description",
			"uri": "Uri",
			"recipientIdentity": "New Recipient Identity",
			"recipientAddress": "New Recipient Address",
			"namespace": "Namespace (Optional)",
			"immutableMetadata": "Immutable Metadata (Optional)",
			"metadata": "Metadata (Optional)",
			"newMetadataKey": "New Metadata Key",
			"newMetadataValue": "New Metadata Value",
			"addMetadata": "Add Metadata",
			"selectBlob": "Select blob",
			"nftId": "Nft Id",
			"nftQr": "Nft QR Code",
			"nftOf": "Nft of {blob}",
			"signature": "Signature",
			"action": "Mint",
			"actionSuccess": "Minting was successful",
			"transfer": "Transfer",
			"transferSuccess": "Transferring was successful",
			"progress": "Action in progress...",
			"resultTitle": "Nft Result"
		},
		"immutableProof": {
			"title": "Immutable Proofs",
			"loading": "Loading immutable proofs...",
			"noItems": "No immutable proofs found",
			"createProof": "Create Proof",
			"deleteTitle": "Delete Proof",
			"deleteMessage": "Are you sure you want to delete this proof?"
		},
		"immutableProofProperties": {
			"title": "Create Immutable Proof",
			"proofObject": "Proof Object",
			"data": "Data",
			"addData": "Add Data",
			"proofId": "Proof Id",
			"action": "Create",
			"actionSuccess": "Proof creation was successful",
			"progress": "Creating proof...",
			"resultTitle": "Proof Result",
			"id": "Id",
			"userIdentity": "User Identity",
			"proofObjectId": "Proof Object Id",
			"dateCreated": "Date Created",
			"selectExample": "Select an example template"
		},
		"blob": {
			"title": "Blobs",
			"loading": "Loading blobs...",
			"noItems": "No blobs found",
			"createItem": "Create Blob",
			"deleteTitle": "Delete Blob",
			"deleteMessage": "Are you sure you want to delete this blob?"
		},
		"blobView": {
			"title": "Blob Storage",
			"id": "Id",
			"description": "Description",
			"fileExtension": "File Extension",
			"encodingFormat": "Encoding Format",
			"document": "Document",
			"download": "Download"
		},
		"blobProperties": {
			"title": "Create Blob",
			"description": "Description",
			"filename": "Filename",
			"action": "Upload",
			"actionSuccess": "Uploading was successful",
			"progress": "Uploading to storage...",
			"resultTitle": "Upload Result",
			"itemQr": "Blob Storage QR Code",
			"itemId": "Blob Id"
		},
		"verifiableStorage": {
			"title": "Verifiable Storage",
			"loading": "Loading verifiable storage...",
			"noItems": "No verifiable storage found",
			"createItem": "Create Verifiable Storage",
			"deleteTitle": "Delete Verifiable Storage",
			"deleteMessage": "Are you sure you want to delete this verifiable storage?",
			"qr": "Secure Storage View",
			"copyDataClipboard": "Copy data to clipboard"
		},
		"verifiableStorageView": {
			"title": "Verifiable Storage",
			"id": "Id",
			"description": "Description",
			"content": "Content",
			"download": "Download",
			"receipt": "Receipt",
			"explore": "Explore"
		},
		"verifiableStorageProperties": {
			"title": "Create Verifiable Storage",
			"description": "Description",
			"textContent": "Text Content",
			"progress": "Uploading to storage...",
			"action": "Upload",
			"actionSuccess": "Uploading was successful",
			"resultTitle": "Upload Result",
			"itemQr": "Verifiable Storage QR Code",
			"itemId": "Verifiable Storage Id",
			"data": "Data",
			"id": "Id"
		},
		"auditableItemGraphList": {
			"title": "Auditable Item Graphs",
			"loading": "Loading auditable item graphs vertices...",
			"noItems": "No auditable item graph vertices found",
			"createItem": "Create Auditable Item Vertex",
			"deleteTitle": "Delete Auditable Item Vertex",
			"deleteMessage": "Are you sure you want to delete this auditable item vertex?",
			"vertexId": "Vertex Id",
			"annotationObjectType": "Annotation Object Type"
		},
		"auditableItemGraphProperties": {
			"titleCreate": "Create Auditable Item Vertex",
			"titleUpdate": "Update Auditable Item Vertex",
			"description": "Description",
			"actionCreate": "Create",
			"actionCreateSuccess": "Creation was successful",
			"progressCreate": "Creating Vertex...",
			"progressUpdate": "Updating Vertex...",
			"resultTitleCreate": "Vertex created successfully",
			"resultTitleUpdate": "Vertex updated successfully",
			"itemQr": "Auditable Item Graph QR Code",
			"itemId": "Auditable Item Graph Id",
			"vertexId": "Vertex Id",
			"annotationObject": "Annotation Object",
			"selectExample": "Select an example template"
		},
		"auditableItemGraphAliasList": {
			"title": "Alias Ids",
			"noItems": "There are no aliases",
			"addItem": "Add Alias Id",
			"titleAdd": "Add Alias",
			"titleUpdate": "Update Alias",
			"aliasId": "Alias Id",
			"aliasFormat": "Format",
			"annotationObject": "Annotation Object",
			"selectExample": "Select an example template",
			"actionAdd": "Add",
			"actionUpdate": "Update"
		},
		"auditableItemGraphResourceList": {
			"title": "Resources",
			"noItems": "There are no resources",
			"addItem": "Add Resource",
			"titleAdd": "Add Resource",
			"titleUpdate": "Update Resource",
			"resourceId": "Resource Id",
			"resourceObject": "Resource Object",
			"selectExample": "Select an example template",
			"actionAdd": "Add",
			"actionUpdate": "Update"
		},
		"auditableItemGraphEdgeList": {
			"title": "Edges",
			"noItems": "There are no edges",
			"addItem": "Add Edge",
			"titleAdd": "Add Edge",
			"titleUpdate": "Update Edge",
			"edgeId": "Edge Id",
			"edgeRelationships": "Edge Relationships",
			"edgeRelationshipsHelp": "Separate multiple relationships with commas",
			"annotationObject": "Annotation Object",
			"selectExample": "Select an example template",
			"actionAdd": "Add",
			"actionUpdate": "Update"
		},
		"auditableItemGraphChangesets": {
			"title": "Changesets",
			"vertexId": "Vertex Id",
			"noItems": "There are no changesets",
			"changeset": "Changeset",
			"proofId": "Proof Id",
			"viewProof": "View Proof",
			"patches": "Patches",
			"dateCreated": "Date Created"
		},
		"auditableItemStream": {
			"title": "Auditable Item Streams",
			"loading": "Loading auditable item streams...",
			"noItems": "No auditable item streams found",
			"createItem": "Create Auditable Item Stream",
			"deleteTitle": "Delete Auditable Item Stream",
			"deleteMessage": "Are you sure you want to delete this auditable item stream?",
			"id": "Id"
		},
		"auditableItemStreamProperties": {
			"titleCreate": "Create Auditable Item Stream",
			"titleUpdate": "Update Auditable Item Stream",
			"name": "Name",
			"template": "Template",
			"annotationObject": "Annotation Object",
			"immutableInterval": "Immutable Interval",
			"actionCreate": "Create",
			"actionSuccessCreate": "Creation was successful",
			"progressCreate": "Creating...",
			"resultTitleCreate": "Create Result",
			"actionUpdate": "Update",
			"actionSuccessUpdate": "Updating was successful",
			"progressUpdate": "Updating...",
			"resultTitleUpdate": "Update Result",
			"itemQr": "Auditable Item Stream QR Code",
			"itemId": "Auditable Item Stream Id"
		},
		"auditableItemStreamEntriesList": {
			"title": "Stream Entries",
			"addEntry": "Add Entry",
			"entryId": "Entry Id",
			"entryType": "Entry Type",
			"details": "Details",
			"noEntries": "There are no entries in the stream",
			"deleteTitle": "Delete Stream Entry",
			"deleteMessage": "Are you sure you want to delete this stream entry?"
		},
		"auditableItemStreamEntryProperties": {
			"titleCreate": "Create Stream Entry",
			"titleUpdate": "Update Stream Entry",
			"actionCreate": "Create",
			"actionUpdate": "Update",
			"progressUpdate": "Updating...",
			"progressCreate": "Creating...",
			"entryId": "Entry Id",
			"entryObject": "Entry Object",
			"template": "Template"
		},
		"logging": {
			"title": "Logging",
			"search": "Search",
			"loading": "Loading logs...",
			"noItems": "No logs found",
			"action": "Filter",
			"actions": "Actions",
			"progress": "Searching...",
			"copyAllClipboard": "Copy all log to clipboard",
			"copyDataClipboard": "Copy the data body to clipboard",
			"copyErrorClipboard": "Copy the error to clipboard"
		},
		"loggingProperties": {
			"title": "Logging",
			"level": "Level",
			"source": "Source",
			"message": "Message",
			"error": "Error",
			"ts": "Timestamp",
			"data": "Data",
			"pageSize": "Page Size",
			"timeStart": "From Date",
			"timeEnd": "To Date"
		},
		"telemetry": {
			"title": "Telemetry",
			"search": "Search",
			"createMetric": "Create Metric",
			"loading": "Loading metrics...",
			"noItems": "No metrics found",
			"action": "Create",
			"actions": "Actions",
			"progress": "Searching...",
			"deleteTitle": "Delete Telemetry Metric",
			"deleteMessage": "Are you sure you want to delete this metric?",
			"pageSize": "Page Size",
			"timeStart": "From Date",
			"id": "Id",
			"label": "Label",
			"description": "Description",
			"type": "Type",
			"unit": "Unit"
		},
		"telemetryMetricProperties": {
			"title": "Telemetry Metric",
			"id": "Id",
			"label": "Label",
			"description": "Description",
			"type": "Type",
			"unit": "Unit",
			"message": "Message",
			"error": "Error",
			"actionSuccessCreated": "Metric created successfully",
			"actionSuccessUpdated": "Metric updated successfully",
			"resultTitleCreate": "Create Metric Result",
			"resultTitleUpdate": "Update Metric Result",
			"timeEnd": "To Date",
			"metricTypes": {
				"counter": "Counter",
				"gauge": "Gauge",
				"incDecCounter": "Increment Decrement Counter"
			}
		},
		"telemetryMetricValueProperties": {
			"title": "Telemetry Metric Value",
			"incDecSelector": "Increment/Decrement",
			"action": "Add",
			"increment": "Increment",
			"decrement": "Decrement",
			"customDataKey": "New Key",
			"customDataValue": "New Value",
			"customValues": "Custom Data",
			"addCustomData": "Add custom data",
			"value": "Value",
			"valueExample": "e.g. 1.23",
			"progress": "Adding..."
		},
		"telemetryMetricValueList": {
			"title": "Telemetry Metric Values",
			"pageSize": "Page Size",
			"timeStart": "From Date",
			"timeEnd": "To Date",
			"createMetricValue": "Create Metric Value",
			"noItems": "No metric values found",
			"value": "Value",
			"id": "Id",
			"timestamp": "Timestamp",
			"customData": "Custom Data",
			"graph": "View Graph"
		},
		"telemetryMetricValueChart": {
			"title": "Telemetry Metric Chart",
			"loading": "Loading chart data..."
		},
		"proofView": {
			"title": "Proof View",
			"type": "Type",
			"header": "Header",
			"payload": "Payload",
			"signature": "Signature"
		},
		"dataProcessingRuleGroupList": {
			"title": "Data Processing",
			"search": "Search",
			"createRuleGroup": "Create Rule Group",
			"extractData": "Extract Data",
			"loading": "Loading rule groups...",
			"noItems": "No rule groups found",
			"action": "Create",
			"actions": "Actions",
			"progress": "Searching...",
			"deleteTitle": "Delete Rule Group",
			"deleteMessage": "Are you sure you want to delete this rule group?",
			"error": "Error",
			"pageSize": "Page Size",
			"id": "Id",
			"label": "Label"
		},
		"dataProcessingRuleGroupProperties": {
			"title": "Data Processing Rule Group",
			"id": "Id",
			"label": "Label",
			"message": "Message",
			"error": "Error",
			"pageSize": "Page Size",
			"actionCreate": "Create",
			"actionUpdate": "Update",
			"actionSuccess": "Rule group added correctly",
			"resultTitleCreate": "Created Rule Group",
			"resultTitleUpdate": "Updated Rule Group",
			"progressCreate": "Creating...",
			"progressUpdate": "Updating..."
		},
		"dataProcessingRuleGroupRuleList": {
			"title": "Data Processing Rule Group",
			"loading": "Loading Rules...",
			"createRule": "Create Rule",
			"noItems": "No rules found",
			"source": "Source",
			"target": "Target",
			"actions": "Actions",
			"deleteTitle": "Delete Rule",
			"deleteMessage": "Are you sure you want to delete this rule?"
		},
		"dataProcessingRuleGroupRuleProperties": {
			"title": "Data Processing Rule Group Rule",
			"error": "Error",
			"target": "Target",
			"rule": "Rule",
			"rules": "Rules",
			"source": "Source",
			"sourceDescription": "The format of the source follows the JSONPath standard. e.g. $.store.book[0].title",
			"moreInformation": "More information",
			"retainPathDepth": "Retain Path Depth",
			"coerce": "Coerce Type",
			"coerceNone": "None",
			"actionCreate": "Create",
			"actionUpdate": "Update",
			"progressCreate": "Creating...",
			"progressUpdate": "Updating..."
		},
		"dataProcessingExtractView": {
			"title": "Data Processing Extract",
			"action": "Extract",
			"actionSuccess": "Data extraction completed",
			"error": "Error",
			"progress": "Extracting...",
			"fileInput": "File Input",
			"fileOutput": "File Output",
			"ruleGroup": "Rule Group",
			"rules": "Rules",
			"inputContent": "Input Content",
			"extractedData": "Extracted Data"
		},
		"documentView": {
			"title": "Document View",
			"id": "Document ID",
			"documentIdFormat": "Document ID Format",
			"documentCode": "Document Code",
			"fileExtension": "File Extension",
			"encodingFormat": "Encoding Format",
			"document": "Document",
			"qr": "QR Code",
			"selectFile": "Select a file",
			"update": "Update",
			"annotationObject": "Annotation Object",
			"updating": "Updating Document...",
			"deleteTitle": "Delete Document Revision",
			"deleteMessage": "Are you sure you want to delete this document revision?",
			"deleteSuccess": "Document revision deleted successfully",
			"documentView": "Document Revision Count",
			"invalidJson": "Invalid JSON format",
			"noDocumentsFound": "No documents found for this revision",
			"documentRevision": "Document Revision",
			"revisionHistory": "Revision History",
			"documentDetails": "Document Details",
			"documentId": "Document Id",
			"hideDeletedDocuments": "Hide deleted documents",
			"showDeletedDocuments": "Show deleted documents",
			"dateDeleted": "Date Deleted",
			"fileContent": "File Content"
		},
		"document": {
			"title": "Documents",
			"loading": "Loading documents...",
			"noItems": "No documents found",
			"createItem": "Create Document",
			"deleteTitle": "Delete Document",
			"deleteMessage": "Are you sure you want to delete this document?",
			"documentId": "Document ID",
			"graphId": "Graph ID",
			"searchById": "Search by Graph ID",
			"searchPlaceholder": "Enter Graph ID",
			"noSearchResults": "No documents found"
		},
		"documentProperties": {
			"title": "Create Document",
			"updateTitle": "Update Document",
			"documentId": "Document Id",
			"documentName": "Document Name",
			"documentIdFormat": "Document Id Format",
			"documentCode": "Document Code",
			"file": "File",
			"action": "Create",
			"actionUpdate": "Update",
			"actionSuccess": "Create was successful",
			"updateSuccess": "Update was successful",
			"invalidJson": "Invalid JSON format",
			"progress": "Creating...",
			"updateProgress": "Updating...",
			"resultTitle": "Create Result",
			"itemQr": "Document Storage QR Code",
			"itemId": "Document Id",
			"auditableItemGraphId": "Graph ID",
			"fileUpdateOptional": "Selecting a file is optional for updates",
			"advancedOptions": "Advanced Options",
			"annotationObject": "Annotation Object (JSON)",
			"auditableItemGraphEdges": "Auditable Item Graph Edges",
			"documentOptions": "Document Options",
			"createAttestation": "Create Attestation",
			"addAlias": "Add Alias",
			"aliasAnnotationObject": "Alias Annotation Object (JSON)",
			"vertexId": "Vertex ID",
			"vertexAddAlias": "Add Alias on Destination Vertex",
			"edgeAliasAnnotationObject": "Edge Alias Annotation Object (JSON)",
			"selectEdge": "Select Edge",
			"noEdgesAvailable": "No edges available",
			"createVertexFirst": "There are no vertices to connect to, create another vertex first.",
			"createVertexLink": "Create Vertex",
			"selectGraph": "Select Graph"
		},
		"documentExtract": {
			"title": "Document Extraction",
			"id": "Document Id",
			"chooseRule": "Choose Extraction Data Rule",
			"selectOption": "Select an option",
			"extractData": "Extract Data",
			"dataExtracted": "Data extracted from file",
			"fileContent": "File Content"
		},
		"rightsManagement": {
			"title": "Rights Management Policies",
			"loading": "Loading Policies...",
			"noItems": "No Policies found",
			"createPolicy": "Create Policy",
			"deleteTitle": "Delete Policy",
			"deleteMessage": "Are you sure you want to delete this policy?",
			"pageSize": "Page Size",
			"policyType": "Policy Type",
			"search": "Search"
		},
		"rightsManagementProperties": {
			"title": "Create Policy",
			"titleUpdate": "Update Policy",
			"policyObject": "Policy Object",
			"data": "Data",
			"addData": "Add Data",
			"policyId": "Policy Id",
			"action": "Create",
			"actionSuccess": "Policy creation was successful",
			"actionSuccessUpdate": "Policy update was successful",
			"progress": "Creating policy...",
			"progressUpdate": "Updating policy...",
			"resultTitle": "Policy Result",
			"resultTitleUpdate": "Policy Update Result",
			"id": "Id",
			"context": "Context",
			"type": "Type",
			"userIdentity": "User Identity",
			"policyObjectId": "Policy Object Id",
			"selectExample": "Select an example template",
			"uidMessage": "Policy UID is self regenerated and cannot be modified"
		}
	},
	"actions": {
		"modify": "Modify",
		"delete": "Delete",
		"view": "View More",
		"decode": "Decode",
		"close": "Close",
		"back": "Back",
		"add": "Add",
		"create": "Create",
		"update": "Update"
	},
	"error": {
		"rightsManagement": {
			"policyUidRequired": "Policy UID is required",
			"policyObjectRequired": "Policy Object is required"
		}
	}
}
